<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>developer_experience on Also sprach tealeg...</title>
    <link>https://www.teale.de/tags/developer_experience/</link>
    <description>Recent content in developer_experience on Also sprach tealeg...</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-gb</language>
    <lastBuildDate>Fri, 06 May 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://www.teale.de/tags/developer_experience/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Maturity Matrices: A tool for DevX KPIs and OKRs (Part 2)</title>
      <link>https://www.teale.de/post/devx/a-tool-for-devx-kpis-2/</link>
      <pubDate>Fri, 06 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://www.teale.de/post/devx/a-tool-for-devx-kpis-2/</guid>
      <description>Building a DevX Maturity Matrix   I promised in Part I of this article that I&amp;#39;d explain how I generate the headline numbers that I report as part of the KPIs or OKRs for the Developer eXperience of a product.
 The answer is rather simple but, at least initially, quite labourious.
  Reminder: what a maturity matrix is.   A maturity matrix encodes a maturity level as a value (typically a positive integer) for every unique combination of product, feature, customer/developer type, and maturity type.</description>
    </item>
    
    <item>
      <title>DevX is a Quality Process</title>
      <link>https://www.teale.de/post/devx/devx-is-a-quality-process/</link>
      <pubDate>Thu, 05 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://www.teale.de/post/devx/devx-is-a-quality-process/</guid>
      <description>DevX is not just about what we create   For all the good that a Developer eXperience team can do, by creating documentation, improving APIs, building tools and libraries, and fostering community, this will only ever constitute part of the total developer experience. The foundation stones of a good developer experience are actually in the hands of the core product teams.
 Delivering a quality product, which does what it should, and does it reliably, is the bedrock on which any developer&amp;#39;s eXperience is based.</description>
    </item>
    
    <item>
      <title>Maturity Matrices: A tool for DevX KPIs and OKRs (Part 1)</title>
      <link>https://www.teale.de/post/devx/a-tool-for-devx-kpis-1/</link>
      <pubDate>Thu, 05 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://www.teale.de/post/devx/a-tool-for-devx-kpis-1/</guid>
      <description>Introduction   This blog post will introduce the Maturity Matrix I have been developing to help report on the state of Developer eXperience for a given product.
 In this first part, I&amp;#39;ll explain why I think it&amp;#39;s needed, what I report from it, and what those reports mean. In Part II I&amp;#39;ll explain how I produce these numbers.
  KPIs and OKRs for DevX are hard   Knowing how to describe goals and measure performance against those goals is a challenge for every DevX team.</description>
    </item>
    
    <item>
      <title>Why the long pause?</title>
      <link>https://www.teale.de/post/life/why-the-long-pauses/</link>
      <pubDate>Fri, 08 Apr 2022 12:49:00 +0200</pubDate>
      
      <guid>https://www.teale.de/post/life/why-the-long-pauses/</guid>
      <description>The history of my blog If you look back through my historic posts (many of which I&amp;rsquo;ve recently migrated here from my historic blog spot blog), you&amp;rsquo;ll notice that I&amp;rsquo;ve been blogging, on and off, since 2007. That&amp;rsquo;s actually not true - I had done some previous blogging on another platform (all now lost), and actually I&amp;rsquo;d written occasional thoughts on various &amp;ldquo;home pages&amp;rdquo; going all the way back to 1995.</description>
    </item>
    
    <item>
      <title>Software Engineers Don&#39;t Scale</title>
      <link>https://www.teale.de/post/tech/software-engineers-dont-scale/</link>
      <pubDate>Thu, 04 Jul 2019 15:57:18 +0200</pubDate>
      
      <guid>https://www.teale.de/post/tech/software-engineers-dont-scale/</guid>
      <description>Software Engineers don&amp;rsquo;t scale &amp;hellip; or how I learned to stop worrying and love commenting my code. NOTE: I originally published this on the Inside Heetch blog
This article, by Mathew Skelton and Manuel Pais, reminds me that, for everything that’s been made simpler in this era of cloud computing and micro-services, we’ve paid a price in terms of cognitive load. We simply need to keep more context in mind when making or evaluating any change to our code.</description>
    </item>
    
    <item>
      <title>Developer Care</title>
      <link>https://www.teale.de/post/tech/developer-care/</link>
      <pubDate>Wed, 15 May 2019 15:57:18 +0200</pubDate>
      
      <guid>https://www.teale.de/post/tech/developer-care/</guid>
      <description>Those of you who know me may be aware that at the end of August 2018, I left my job at Avocet to join a new team at Heetch.
The main allure of the role at Heetch was the chance to be part of a team deliberately set up to act as a catalyst for product developers. The concept under which we work is known as &amp;ldquo;Developer Care&amp;rdquo;, and back in November I wrote a fairly extensive blog post for Heetch about what that means and how it came to be.</description>
    </item>
    
    <item>
      <title>The danger of superfluity.</title>
      <link>https://www.teale.de/post/tech/programming/superfluity/</link>
      <pubDate>Thu, 14 Aug 2008 01:02:00 +0200</pubDate>
      
      <guid>https://www.teale.de/post/tech/programming/superfluity/</guid>
      <description>A useful dialog There is an application that I have been working as an employee and a consultant for five years now. In the course of development I routinely run into a dialog in this application that handles errors at a global (or at least global to the GUI) level.
This dialog is very useful, it stops the GUI bombing out totally and presents the user with the sad news that something has gone wrong and allows them to report such an error.</description>
    </item>
    
  </channel>
</rss>
